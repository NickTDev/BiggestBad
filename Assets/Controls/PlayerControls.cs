//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Controls/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerOverworld"",
            ""id"": ""4c79c50f-8c5c-45ed-a65f-ba62882bfab2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3df0f59c-c541-4bb2-ab8a-9a06c4a659e0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""6d9f7c88-80e0-4fba-80e0-a59a127396a9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""037304ab-a955-467a-986e-5642766f87f4"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""0c36f6bb-19c3-4c7b-857d-5a1bebee489e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a2ae4633-d0ed-4cb9-b388-548c537ce1e4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9848130a-a58f-4f33-b3f9-debee90af1cf"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""11111eeb-cfc2-4b1a-9442-5876a88dcc40"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""91e30ae2-c32e-433c-976f-583bdbdeffe3"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4d6a16d9-374f-4852-8c40-7177b97452bf"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""183adbb2-f9ad-4a84-87e0-c579edefecff"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""815980e7-eb24-4c1c-a9e9-658735ddafc8"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""2a358d0b-5343-47bf-b0bd-890431028607"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""57030199-6786-4d88-9bbe-a7d707ccb2e5"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dad1b300-39aa-4e23-95c3-002b5caafcbd"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9929e458-53e1-4c96-9c50-f007120d385c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""076172d1-de51-44f7-8ae8-86653d6ee012"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""PlayerBattle"",
            ""id"": ""34bedd18-39e1-42a2-b8ec-c939e1806d41"",
            ""actions"": [
                {
                    ""name"": ""Player 1 Action"",
                    ""type"": ""Button"",
                    ""id"": ""4d940c8b-8497-4368-ae3a-11520414fc9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player 2 Action"",
                    ""type"": ""Button"",
                    ""id"": ""4a5be186-406f-4664-b840-f28d14ea297f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player 3 Action"",
                    ""type"": ""Button"",
                    ""id"": ""393324f7-8e83-4881-9cee-7bf6f4cf58a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player 4 Action"",
                    ""type"": ""Button"",
                    ""id"": ""18f4047c-97be-4210-be2e-5413b923e4db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Target Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""5c13e3c0-2486-496c-a4c7-67a0be396195"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Target Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""f21ff688-9a48-40e7-9a81-51343af519b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Joystick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3a305b07-365c-4ba1-a836-72cbefdd0381"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cf56c918-0364-49e3-bd1c-46d750f12408"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3b1855e7-54e6-4559-8fea-9ce920423b64"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Player 1 Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8dda21c-8f31-43e1-aede-ce394862bf81"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Player 1 Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28bc1006-2ff5-4b02-b399-b4907cff18c9"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Target Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66f60bcc-8b04-4e52-b766-a80ae9ce6b11"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Target Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8af5e9d1-96ec-441c-9e51-d9b430c0f430"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Target Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bb92952-5336-4e78-8607-09d8719c8113"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Target Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da270945-a1fe-4cb2-bb17-35df95968a02"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Player 4 Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acb59f82-ad40-4c3c-954e-958cdd8bf79c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Player 4 Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""febd5c06-8554-4db3-baca-e5cad542a864"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Player 2 Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad34a68b-ef59-4ab2-8605-fa973a62035f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Player 2 Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d24a1ed-44e5-42c8-8349-47e2e74c7b5a"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Player 3 Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e9795cb-e7a5-42e2-bbcb-905cb7cfd639"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Player 3 Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""feb237d2-86c2-423d-947b-69b9aed99589"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Left Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""5f867251-24f7-4ba5-a9ee-8250b017888d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2a6172f6-4564-43a8-baf0-630495b447fe"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6547b645-8318-4860-9dce-2ab31ec68ad2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1bc772ef-c346-483a-bab4-dacbcfcd764a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3e774763-e877-4089-a74e-fb8f1191273f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""628e998d-5bf3-47f7-907e-19fb2b61e40e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""56e8ee43-e362-445f-8ccb-e8eff575d0a6"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""22cd628e-570d-4072-85ae-1e0423f57927"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1fc6a419-2397-478f-be07-4158712d9b7f"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fdd8977b-534a-4f69-b0da-168c5d30eb7c"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""PlayerMenu"",
            ""id"": ""e2695455-9024-469e-b079-6dae1e03b8b2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ef94587f-44b3-41bc-aa00-e3c2fc2fdd9e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""5e258742-0b7e-4420-802a-a61e353053a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""700afcb2-80b3-4e53-91d6-ffd23dd5508c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""b026c3e2-89c9-4b8a-a262-e2297a358e07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Turn Off Tutorial"",
                    ""type"": ""Button"",
                    ""id"": ""21cbd746-1234-42c8-94a7-b6623da5760a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""8356bb40-12bb-473b-9c3c-1e354fc41222"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2c871fdc-0b5b-4a50-bea7-9bdc8709c964"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c64c35f9-48d8-460c-82e7-663c013938fc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3a0210b5-120e-436d-959c-5cf288d82c73"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a8abb5a0-2f54-412e-908e-81c2715e73a1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""c34d7b87-cd0f-49dd-ad8b-b2bf0d4db523"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""42352cb3-841e-46fa-9889-d0bb919830d3"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""609c8aed-3931-450b-9bb2-dedcf39d2b1b"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b881000e-bc40-4e20-8fb8-695db852e392"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""17f4b9a6-bb96-4207-b327-b7140608713f"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d7cbaeba-2aaa-4b9e-aa57-79e738a9a253"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76594ea5-130a-47d2-af92-639219b291ec"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de74bad4-5d12-45b9-aad4-f09c8cd8e4ee"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d324bec-3085-47ce-812c-735d2dde59c9"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c9168a94-ed6f-451b-a0e7-34b6aaa3de08"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55903f73-62a2-4b7b-b951-719351572f56"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Turn Off Tutorial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerCamera"",
            ""id"": ""32479e0f-ce13-47d4-8ccb-172d8349dd81"",
            ""actions"": [
                {
                    ""name"": ""RightStick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0786e08c-240f-444c-84ea-7ab86ade6c7c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""type"": ""PassThrough"",
                    ""id"": ""31499b32-a586-4083-9f2e-678b96acdb8d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom In"",
                    ""type"": ""Button"",
                    ""id"": ""2fc6db55-2a3b-4419-be81-36710c49190c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom Out"",
                    ""type"": ""Button"",
                    ""id"": ""08de44af-a898-4a5d-bb48-25bc39a1b205"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset Follow"",
                    ""type"": ""Button"",
                    ""id"": ""cf0e9105-3dbc-4006-a4b5-cd6c55a0de6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2545ea09-af1a-4ca2-a7c0-da4922f605bb"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightStick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""11eeead2-bd61-4a1b-942d-8d5f64cb68e1"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ArrowKeys"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6c656f8f-f146-4c13-af1e-a9939438045d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ArrowKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d5a1b429-8020-4e50-95ba-ce9fc502c76e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ArrowKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""14b93308-b892-4e8c-a8ec-b49bfeafff12"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ArrowKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a159a42f-3957-4cfb-b7be-0772978f1fab"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ArrowKeys"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ecc7182b-2ee9-4eb4-8153-598612436f01"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Zoom In"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""070aca52-063f-42d2-b05a-114ebb905da2"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Zoom In"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a957bc2-87fe-4618-8c1f-07b213031495"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Zoom Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92a9f1b3-c51b-43cd-9a38-51d1f0ade5b0"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Zoom Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""873f65b6-32f5-4927-bf2b-a10bcfbbe068"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reset Follow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e005a16-fee1-4954-ae0c-e3e1d10a5ad5"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Reset Follow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86f250d7-bedc-4ea2-9b8a-18b26b6af84d"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reset Follow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8243eea-cedf-4bdc-9eae-62e4c4576469"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Reset Follow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerOverworld
        m_PlayerOverworld = asset.FindActionMap("PlayerOverworld", throwIfNotFound: true);
        m_PlayerOverworld_Move = m_PlayerOverworld.FindAction("Move", throwIfNotFound: true);
        // PlayerBattle
        m_PlayerBattle = asset.FindActionMap("PlayerBattle", throwIfNotFound: true);
        m_PlayerBattle_Player1Action = m_PlayerBattle.FindAction("Player 1 Action", throwIfNotFound: true);
        m_PlayerBattle_Player2Action = m_PlayerBattle.FindAction("Player 2 Action", throwIfNotFound: true);
        m_PlayerBattle_Player3Action = m_PlayerBattle.FindAction("Player 3 Action", throwIfNotFound: true);
        m_PlayerBattle_Player4Action = m_PlayerBattle.FindAction("Player 4 Action", throwIfNotFound: true);
        m_PlayerBattle_TargetConfirm = m_PlayerBattle.FindAction("Target Confirm", throwIfNotFound: true);
        m_PlayerBattle_TargetCancel = m_PlayerBattle.FindAction("Target Cancel", throwIfNotFound: true);
        m_PlayerBattle_LeftJoystick = m_PlayerBattle.FindAction("Left Joystick", throwIfNotFound: true);
        m_PlayerBattle_Movement = m_PlayerBattle.FindAction("Movement", throwIfNotFound: true);
        // PlayerMenu
        m_PlayerMenu = asset.FindActionMap("PlayerMenu", throwIfNotFound: true);
        m_PlayerMenu_Move = m_PlayerMenu.FindAction("Move", throwIfNotFound: true);
        m_PlayerMenu_Select = m_PlayerMenu.FindAction("Select", throwIfNotFound: true);
        m_PlayerMenu_Cancel = m_PlayerMenu.FindAction("Cancel", throwIfNotFound: true);
        m_PlayerMenu_Click = m_PlayerMenu.FindAction("Click", throwIfNotFound: true);
        m_PlayerMenu_TurnOffTutorial = m_PlayerMenu.FindAction("Turn Off Tutorial", throwIfNotFound: true);
        // PlayerCamera
        m_PlayerCamera = asset.FindActionMap("PlayerCamera", throwIfNotFound: true);
        m_PlayerCamera_RightStick = m_PlayerCamera.FindAction("RightStick", throwIfNotFound: true);
        m_PlayerCamera_ArrowKeys = m_PlayerCamera.FindAction("ArrowKeys", throwIfNotFound: true);
        m_PlayerCamera_ZoomIn = m_PlayerCamera.FindAction("Zoom In", throwIfNotFound: true);
        m_PlayerCamera_ZoomOut = m_PlayerCamera.FindAction("Zoom Out", throwIfNotFound: true);
        m_PlayerCamera_ResetFollow = m_PlayerCamera.FindAction("Reset Follow", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerOverworld
    private readonly InputActionMap m_PlayerOverworld;
    private List<IPlayerOverworldActions> m_PlayerOverworldActionsCallbackInterfaces = new List<IPlayerOverworldActions>();
    private readonly InputAction m_PlayerOverworld_Move;
    public struct PlayerOverworldActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerOverworldActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerOverworld_Move;
        public InputActionMap Get() { return m_Wrapper.m_PlayerOverworld; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerOverworldActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerOverworldActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerOverworldActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerOverworldActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
        }

        private void UnregisterCallbacks(IPlayerOverworldActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
        }

        public void RemoveCallbacks(IPlayerOverworldActions instance)
        {
            if (m_Wrapper.m_PlayerOverworldActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerOverworldActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerOverworldActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerOverworldActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerOverworldActions @PlayerOverworld => new PlayerOverworldActions(this);

    // PlayerBattle
    private readonly InputActionMap m_PlayerBattle;
    private List<IPlayerBattleActions> m_PlayerBattleActionsCallbackInterfaces = new List<IPlayerBattleActions>();
    private readonly InputAction m_PlayerBattle_Player1Action;
    private readonly InputAction m_PlayerBattle_Player2Action;
    private readonly InputAction m_PlayerBattle_Player3Action;
    private readonly InputAction m_PlayerBattle_Player4Action;
    private readonly InputAction m_PlayerBattle_TargetConfirm;
    private readonly InputAction m_PlayerBattle_TargetCancel;
    private readonly InputAction m_PlayerBattle_LeftJoystick;
    private readonly InputAction m_PlayerBattle_Movement;
    public struct PlayerBattleActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerBattleActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Player1Action => m_Wrapper.m_PlayerBattle_Player1Action;
        public InputAction @Player2Action => m_Wrapper.m_PlayerBattle_Player2Action;
        public InputAction @Player3Action => m_Wrapper.m_PlayerBattle_Player3Action;
        public InputAction @Player4Action => m_Wrapper.m_PlayerBattle_Player4Action;
        public InputAction @TargetConfirm => m_Wrapper.m_PlayerBattle_TargetConfirm;
        public InputAction @TargetCancel => m_Wrapper.m_PlayerBattle_TargetCancel;
        public InputAction @LeftJoystick => m_Wrapper.m_PlayerBattle_LeftJoystick;
        public InputAction @Movement => m_Wrapper.m_PlayerBattle_Movement;
        public InputActionMap Get() { return m_Wrapper.m_PlayerBattle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerBattleActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerBattleActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerBattleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerBattleActionsCallbackInterfaces.Add(instance);
            @Player1Action.started += instance.OnPlayer1Action;
            @Player1Action.performed += instance.OnPlayer1Action;
            @Player1Action.canceled += instance.OnPlayer1Action;
            @Player2Action.started += instance.OnPlayer2Action;
            @Player2Action.performed += instance.OnPlayer2Action;
            @Player2Action.canceled += instance.OnPlayer2Action;
            @Player3Action.started += instance.OnPlayer3Action;
            @Player3Action.performed += instance.OnPlayer3Action;
            @Player3Action.canceled += instance.OnPlayer3Action;
            @Player4Action.started += instance.OnPlayer4Action;
            @Player4Action.performed += instance.OnPlayer4Action;
            @Player4Action.canceled += instance.OnPlayer4Action;
            @TargetConfirm.started += instance.OnTargetConfirm;
            @TargetConfirm.performed += instance.OnTargetConfirm;
            @TargetConfirm.canceled += instance.OnTargetConfirm;
            @TargetCancel.started += instance.OnTargetCancel;
            @TargetCancel.performed += instance.OnTargetCancel;
            @TargetCancel.canceled += instance.OnTargetCancel;
            @LeftJoystick.started += instance.OnLeftJoystick;
            @LeftJoystick.performed += instance.OnLeftJoystick;
            @LeftJoystick.canceled += instance.OnLeftJoystick;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
        }

        private void UnregisterCallbacks(IPlayerBattleActions instance)
        {
            @Player1Action.started -= instance.OnPlayer1Action;
            @Player1Action.performed -= instance.OnPlayer1Action;
            @Player1Action.canceled -= instance.OnPlayer1Action;
            @Player2Action.started -= instance.OnPlayer2Action;
            @Player2Action.performed -= instance.OnPlayer2Action;
            @Player2Action.canceled -= instance.OnPlayer2Action;
            @Player3Action.started -= instance.OnPlayer3Action;
            @Player3Action.performed -= instance.OnPlayer3Action;
            @Player3Action.canceled -= instance.OnPlayer3Action;
            @Player4Action.started -= instance.OnPlayer4Action;
            @Player4Action.performed -= instance.OnPlayer4Action;
            @Player4Action.canceled -= instance.OnPlayer4Action;
            @TargetConfirm.started -= instance.OnTargetConfirm;
            @TargetConfirm.performed -= instance.OnTargetConfirm;
            @TargetConfirm.canceled -= instance.OnTargetConfirm;
            @TargetCancel.started -= instance.OnTargetCancel;
            @TargetCancel.performed -= instance.OnTargetCancel;
            @TargetCancel.canceled -= instance.OnTargetCancel;
            @LeftJoystick.started -= instance.OnLeftJoystick;
            @LeftJoystick.performed -= instance.OnLeftJoystick;
            @LeftJoystick.canceled -= instance.OnLeftJoystick;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
        }

        public void RemoveCallbacks(IPlayerBattleActions instance)
        {
            if (m_Wrapper.m_PlayerBattleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerBattleActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerBattleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerBattleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerBattleActions @PlayerBattle => new PlayerBattleActions(this);

    // PlayerMenu
    private readonly InputActionMap m_PlayerMenu;
    private List<IPlayerMenuActions> m_PlayerMenuActionsCallbackInterfaces = new List<IPlayerMenuActions>();
    private readonly InputAction m_PlayerMenu_Move;
    private readonly InputAction m_PlayerMenu_Select;
    private readonly InputAction m_PlayerMenu_Cancel;
    private readonly InputAction m_PlayerMenu_Click;
    private readonly InputAction m_PlayerMenu_TurnOffTutorial;
    public struct PlayerMenuActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerMenuActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerMenu_Move;
        public InputAction @Select => m_Wrapper.m_PlayerMenu_Select;
        public InputAction @Cancel => m_Wrapper.m_PlayerMenu_Cancel;
        public InputAction @Click => m_Wrapper.m_PlayerMenu_Click;
        public InputAction @TurnOffTutorial => m_Wrapper.m_PlayerMenu_TurnOffTutorial;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMenuActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMenuActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMenuActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMenuActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @TurnOffTutorial.started += instance.OnTurnOffTutorial;
            @TurnOffTutorial.performed += instance.OnTurnOffTutorial;
            @TurnOffTutorial.canceled += instance.OnTurnOffTutorial;
        }

        private void UnregisterCallbacks(IPlayerMenuActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @TurnOffTutorial.started -= instance.OnTurnOffTutorial;
            @TurnOffTutorial.performed -= instance.OnTurnOffTutorial;
            @TurnOffTutorial.canceled -= instance.OnTurnOffTutorial;
        }

        public void RemoveCallbacks(IPlayerMenuActions instance)
        {
            if (m_Wrapper.m_PlayerMenuActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMenuActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMenuActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMenuActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMenuActions @PlayerMenu => new PlayerMenuActions(this);

    // PlayerCamera
    private readonly InputActionMap m_PlayerCamera;
    private List<IPlayerCameraActions> m_PlayerCameraActionsCallbackInterfaces = new List<IPlayerCameraActions>();
    private readonly InputAction m_PlayerCamera_RightStick;
    private readonly InputAction m_PlayerCamera_ArrowKeys;
    private readonly InputAction m_PlayerCamera_ZoomIn;
    private readonly InputAction m_PlayerCamera_ZoomOut;
    private readonly InputAction m_PlayerCamera_ResetFollow;
    public struct PlayerCameraActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerCameraActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @RightStick => m_Wrapper.m_PlayerCamera_RightStick;
        public InputAction @ArrowKeys => m_Wrapper.m_PlayerCamera_ArrowKeys;
        public InputAction @ZoomIn => m_Wrapper.m_PlayerCamera_ZoomIn;
        public InputAction @ZoomOut => m_Wrapper.m_PlayerCamera_ZoomOut;
        public InputAction @ResetFollow => m_Wrapper.m_PlayerCamera_ResetFollow;
        public InputActionMap Get() { return m_Wrapper.m_PlayerCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerCameraActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerCameraActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Add(instance);
            @RightStick.started += instance.OnRightStick;
            @RightStick.performed += instance.OnRightStick;
            @RightStick.canceled += instance.OnRightStick;
            @ArrowKeys.started += instance.OnArrowKeys;
            @ArrowKeys.performed += instance.OnArrowKeys;
            @ArrowKeys.canceled += instance.OnArrowKeys;
            @ZoomIn.started += instance.OnZoomIn;
            @ZoomIn.performed += instance.OnZoomIn;
            @ZoomIn.canceled += instance.OnZoomIn;
            @ZoomOut.started += instance.OnZoomOut;
            @ZoomOut.performed += instance.OnZoomOut;
            @ZoomOut.canceled += instance.OnZoomOut;
            @ResetFollow.started += instance.OnResetFollow;
            @ResetFollow.performed += instance.OnResetFollow;
            @ResetFollow.canceled += instance.OnResetFollow;
        }

        private void UnregisterCallbacks(IPlayerCameraActions instance)
        {
            @RightStick.started -= instance.OnRightStick;
            @RightStick.performed -= instance.OnRightStick;
            @RightStick.canceled -= instance.OnRightStick;
            @ArrowKeys.started -= instance.OnArrowKeys;
            @ArrowKeys.performed -= instance.OnArrowKeys;
            @ArrowKeys.canceled -= instance.OnArrowKeys;
            @ZoomIn.started -= instance.OnZoomIn;
            @ZoomIn.performed -= instance.OnZoomIn;
            @ZoomIn.canceled -= instance.OnZoomIn;
            @ZoomOut.started -= instance.OnZoomOut;
            @ZoomOut.performed -= instance.OnZoomOut;
            @ZoomOut.canceled -= instance.OnZoomOut;
            @ResetFollow.started -= instance.OnResetFollow;
            @ResetFollow.performed -= instance.OnResetFollow;
            @ResetFollow.canceled -= instance.OnResetFollow;
        }

        public void RemoveCallbacks(IPlayerCameraActions instance)
        {
            if (m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerCameraActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerCameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerCameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerCameraActions @PlayerCamera => new PlayerCameraActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerOverworldActions
    {
        void OnMove(InputAction.CallbackContext context);
    }
    public interface IPlayerBattleActions
    {
        void OnPlayer1Action(InputAction.CallbackContext context);
        void OnPlayer2Action(InputAction.CallbackContext context);
        void OnPlayer3Action(InputAction.CallbackContext context);
        void OnPlayer4Action(InputAction.CallbackContext context);
        void OnTargetConfirm(InputAction.CallbackContext context);
        void OnTargetCancel(InputAction.CallbackContext context);
        void OnLeftJoystick(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
    }
    public interface IPlayerMenuActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnTurnOffTutorial(InputAction.CallbackContext context);
    }
    public interface IPlayerCameraActions
    {
        void OnRightStick(InputAction.CallbackContext context);
        void OnArrowKeys(InputAction.CallbackContext context);
        void OnZoomIn(InputAction.CallbackContext context);
        void OnZoomOut(InputAction.CallbackContext context);
        void OnResetFollow(InputAction.CallbackContext context);
    }
}
